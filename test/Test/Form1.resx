<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_min.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        b0+ozOWbF/G9AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="btn_close.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>